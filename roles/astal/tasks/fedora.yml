- name: Cheking for appmenu-glib-translator
  ansible.builtin.find:
    paths: /usr
    patterns: libappmenu-glib-translator.so
    file_type: link
    recurse: true
  register: appmenu_glib_translator
  changed_when: false
  become: true

- name: vala-panel-appmenu | Getting information
  ansible.builtin.uri:
    url: "https://gitlab.com/api/v4/projects/6865053/releases?order_by=released_at&sort=desc&per_page=1"
  register: last_release
  changed_when: false

- name: vala-panel-appmenu | Defiine latest version
  ansible.builtin.set_fact:
    latest_version: "{{ last_release.json[0].tag_name | regex_replace('v', '') }}"

- name: vala-panel-appmenu | Define file name
  ansible.builtin.set_fact:
    vala_appmenu_file: "vala-panel-appmenu-{{ latest_version }}"

- name: vala-panel-appmenu | Show latest version
  ansible.builtin.debug:
    var: latest_version

- name: vala-panel-appmenu | Show file name
  ansible.builtin.debug:
    var: vala_appmenu_file

- name: vala-panel-appmenu | Install dependencies
  ansible.builtin.package:
    name: libwnck3-devel
    state: present
  become: true

- name: vala-panel-appmenu | Install
  block:
    - name: Ensure clean download destination
      ansible.builtin.file:
        path: "/tmp/{{ vala_appmenu_file }}.tar.gz"
        state: absent
      become: true

    - name: Downloading vala-panel-appmenu Release
      ansible.builtin.get_url:
        url: "{{ last_release.json[0].assets.sources | selectattr('format', 'equalto', 'tar.gz') | map(attribute='url') | first }}"
        dest: /tmp/
        mode: 0644
        force: true

    - name: Ensure clean extraction destination
      ansible.builtin.file:
        path: "/tmp/{{ vala_appmenu_file }}"
        state: absent
      become: true

    - name: Extracting downloaded vala-panel-appmenu release
      ansible.builtin.unarchive:
        src: "/tmp/{{ vala_appmenu_file }}.tar.gz"
        dest: "/tmp"
        remote_src: true
      notify: Cleanup vala-panel-appmenu downloaded tar

    - name: vala-panel-appmenu | Meson setup
      ansible.builtin.command:
        cmd: meson setup --prefix /usr build -Dxfce=disabled -Dbudgie=disabled -Dmate=disabled -Djayatana=disabled
        chdir: "/tmp/{{ vala_appmenu_file }}"

    - name: vala-panel-appmenu | Meson install
      ansible.builtin.command:
        cmd: meson install -C build
        chdir: "/tmp/{{ vala_appmenu_file }}"
      notify: Cleanup vala-panel-appmenu extracted directory
      become: true

  when: appmenu_glib_translator.matched == 0

